# .github/workflows/ci.yml

name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  windows:
    name: Windows
    runs-on: windows-2025
    strategy:
      matrix:
        format: [installer]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup icon
        run: |
          mkdir -p icons
          cp assets/icons/app_icon.ico icons/icon.ico
        shell: bash

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: win-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: win-

      - name: Install cargo-binstall
        shell: pwsh
        run: |
          $BinDir = "$env:USERPROFILE\.cargo\bin"
          if (!(Test-Path $BinDir)) { New-Item -ItemType Directory -Path $BinDir | Out-Null }
          iwr https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-pc-windows-msvc.zip -OutFile binstall.zip
          Expand-Archive binstall.zip -DestinationPath $BinDir -Force
          echo "$BinDir" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Install dx
        shell: pwsh
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build
        run: |
          dx bundle --release --platform desktop

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: target/dx/DreamLauncher/bundle/windows/*.exe

  windows-arm:
    name: Windows ARM
    runs-on: windows-2025
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup icon
        run: |
          mkdir -p icons
          cp assets/icons/app_icon.ico icons/icon.ico
        shell: bash

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Setup Python libs
        shell: pwsh
        run: |
          $pythonRoot = (python -c "import sys; print(sys.base_prefix)")
          $libPath = Join-Path $pythonRoot "libs"
          echo "LIB=$libPath;$env:LIB" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: win-arm-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: win-arm-

      - name: Install cargo-binstall
        shell: pwsh
        run: |
          $BinDir = "$env:USERPROFILE\.cargo\bin"
          if (!(Test-Path $BinDir)) { New-Item -ItemType Directory -Path $BinDir | Out-Null }
          iwr https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-pc-windows-msvc.zip -OutFile binstall.zip
          Expand-Archive binstall.zip -DestinationPath $BinDir -Force
          echo "$BinDir" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Install Rust ARM
        run: |
          rustup update stable
          rustup target add aarch64-pc-windows-msvc
          rustup component add rust-src

      - name: Install dx
        shell: pwsh
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build
        run: |
          dx bundle --release --platform desktop --target aarch64-pc-windows-msvc
        shell: bash

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: windows-arm
          path: target/dx/DreamLauncher/bundle/

  linux:
    name: Linux
    runs-on: ubuntu-24.04
    continue-on-error: true
    strategy:
      matrix:
        format: [deb, appimage, rpm]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install cargo-binstall
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install dx
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Install deps
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libgtk-3-dev libglib2.0-dev libsoup-3.0-dev libssl-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config build-essential curl xdotool fuse libfuse2 desktop-file-utils appstream file
          version: 1

      - name: Setup AppImage environment
        if: matrix.format == 'appimage'
        run: |
          wget -O linuxdeploy-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          mkdir -p ~/.cache/tauri
          mv linuxdeploy-x86_64.AppImage ~/.cache/tauri/

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.format }}-${{ github.run_id }}
          restore-keys: linux-

      - name: Install Rust
        run: rustup update stable

      - name: Debug AppImage
        run: |
          ls -l ~/.cache/tauri/
          file ~/.cache/tauri/linuxdeploy-x86_64.AppImage
          chmod +x ~/.cache/tauri/linuxdeploy-x86_64.AppImage
          export APPIMAGE_EXTRACT_AND_RUN=1
          ~/.cache/tauri/linuxdeploy-x86_64.AppImage --appimage-version || true

      - name: Build
        run: |
          export NO_STRIP=true
          if [ "${{ matrix.format }}" = "appimage" ]; then
            export APPIMAGE_EXTRACT_AND_RUN=1
          fi
          dx bundle --release --platform desktop --package-types ${{ matrix.format }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.format }}
          path: target/dx/DreamLauncher/bundle/linux/bundle/${{ matrix.format }}/*.${{ matrix.format }}

  macos-app:
    name: macOS
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/dx
            ~/.cargo/bin/cargo-binstall
          key: macos-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: macos-
      - name: Install cargo-binstall
        run: |
          if [ ! -f ~/.cargo/bin/cargo-binstall ]; then
            curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          fi
      - name: Install dx
        run: |
          if [ ! -f ~/.cargo/bin/dx ]; then
            cargo binstall dioxus-cli --version 0.7.0-rc.0 -y || cargo install dioxus-cli --version 0.7.0-rc.0
          fi
      - name: Build
        run: |
          dx bundle --release --platform desktop || {
            echo "Bundle failed, building executable..."
            cargo build --release
            mkdir -p target/dx/DreamLauncher/bundle/macos/bundle/macos/DreamLauncher.app/Contents/MacOS
            cp target/release/DreamLauncher target/dx/DreamLauncher/bundle/macos/bundle/macos/DreamLauncher.app/Contents/MacOS/DreamLauncher
          }
      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: target/dx/DreamLauncher/bundle/macos/bundle/macos/*.app
      - name: Upload dmg
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: target/dx/DreamLauncher/bundle/macos/bundle/dmg/*.dmg
