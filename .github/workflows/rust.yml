# Dioxus-based workflow to build and package the launcher for Windows, macOS, and Linux.

name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-windows:
    name: Windows x64
    runs-on: windows-2025
    defaults:
      run:
        working-directory: launcher
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        run: |
          rustup update stable
          cargo install --locked dioxus-cli

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-x64-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-x64-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: DreamLauncher-Windows-x64
          path: |
            target/release/bundle/msi/*.msi
            target/release/bundle/nsis/*.exe

  build-windows-arm64:
    name: Windows ARM64
    runs-on: windows-2025
    defaults:
      run:
        working-directory: launcher
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install Rust
        run: |
          rustup update stable
          rustup target add aarch64-pc-windows-msvc
          cargo install --locked dioxus-cli

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-arm64-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-arm64-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop --target aarch64-pc-windows-msvc

      - name: Upload Windows ARM64 installer
        uses: actions/upload-artifact@v4
        with:
          name: DreamLauncher-Windows-ARM64
          path: |
            target/aarch64-pc-windows-msvc/release/bundle/msi/*.msi
            target/aarch64-pc-windows-msvc/release/bundle/nsis/*.exe

  build-linux:
    name: Linux
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: launcher
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libgtk-3-dev libglib2.0-dev libsoup-3.0-dev libssl-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config build-essential curl xdotool
          version: 1

      - name: Install Rust
        run: |
          rustup update stable
          cargo install --locked dioxus-cli

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: linux-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop

      - name: Upload Linux
        uses: actions/upload-artifact@v4
        with:
          name: DreamLauncher-Linux-AppImage
          path: |
            target/release/bundle/appimage/*.AppImage
            target/release/bundle/deb/*.deb

  build-macos:
    name: macOS
    runs-on: macos-15
    defaults:
      run:
        working-directory: launcher
    env:
      TAURI_SKIP_XATTR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        run: |
          rustup update stable
          cargo install --locked dioxus-cli

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: macos-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: macos-dioxus-

      - name: Build
        run: |
          dx bundle --release --platform desktop || {
            echo "Bundle failed due to xattr issues, trying cargo build as fallback"
            cargo build --release
            mkdir -p target/release/bundle/macos
            echo "Fallback build completed, but .app bundle not available"
          }

      - name: Upload macOS
        uses: actions/upload-artifact@v4
        with:
          name: DreamLauncher-macOS
          path: |
            target/release/bundle/macos/*.app
            target/release/bundle/dmg/*.dmg
