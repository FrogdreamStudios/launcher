# Dioxus-based workflow to build and package the launcher for Windows, macOS, and Linux.

name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-windows:
    name: Windows x64
    runs-on: windows-2025
    env:
      CARGO_NET_RETRY: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        run: |
          rustup update stable
          rustup component add rust-src
          # Try different installation strategies
          cargo install dioxus-cli --version 0.5.6 || cargo install dioxus-cli --version 0.5.5 || cargo install dioxus-cli --git https://github.com/DioxusLabs/dioxus --tag v0.5.6
        shell: bash

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-x64-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-x64-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: target/release/bundle/

  build-windows-arm64:
    name: Windows ARM64
    runs-on: windows-2025
    env:
      CARGO_NET_RETRY: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install Python libs path
        shell: pwsh
        run: |
          $pythonRoot = (python -c "import sys; print(sys.base_prefix)")
          $libPath = Join-Path $pythonRoot "libs"
          echo "Python libs path: $libPath"
          echo "LIB=$libPath;$env:LIB" | Out-File -FilePath $env:GITHUB_ENV -Append
          if (!(Test-Path (Join-Path $libPath "python3.lib"))) {
            Write-Host "python3.lib not found in $libPath"
            exit 1
          }

      - name: Install Rust
        run: |
          rustup update stable
          rustup target add aarch64-pc-windows-msvc
          rustup component add rust-src
          # Install for x64 host, will work for cross-compilation
          cargo install dioxus-cli --version 0.7.0-rc.0 || cargo install dioxus-cli --version 0.7.0-rc. || cargo install dioxus-cli --git https://github.com/DioxusLabs/dioxus --tag v0.7.0-rc.0
        shell: bash

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-arm64-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-arm64-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop --target aarch64-pc-windows-msvc

      - name: Upload Windows ARM64 installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-arm64-installer
          path: target/aarch64-pc-windows-msvc/release/bundle/

  build-linux:
    name: Linux
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libgtk-3-dev libglib2.0-dev libsoup-3.0-dev libssl-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config build-essential curl xdotool fuse libfuse2 desktop-file-utils appstream
          version: 1

      - name: Install Rust
        run: |
          rustup update stable
          cargo install dioxus-cli --version 0.7.0-rc.0

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: linux-dioxus-

      - name: Build
        run: |
          # Set FUSE AppImage variables
          export APPIMAGE_EXTRACT_AND_RUN=1
          export APPDIR=/tmp/appdir

          # Try different bundle formats
          dx bundle --release --platform desktop || {
            echo "AppImage build failed, trying debian package..."
            dx bundle --release --platform desktop --format deb || {
              echo "Debian package build failed, trying simple binary..."
              cargo build --release
              mkdir -p target/release/bundle/linux
              cp target/release/launcher-dev target/release/bundle/linux/dream-launcher || true
            }
          }

      - name: Upload Linux
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: target/release/bundle/

  build-macos:
    name: macOS
    runs-on: macos-15
    env:
      TAURI_SKIP_XATTR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        run: |
          rustup update stable
          cargo install dioxus-cli --version 0.7.0-rc.0

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: macos-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: macos-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop || {
          echo "Bundle failed due to xattr issues, trying cargo build as fallback"
          cargo build --release
          mkdir -p target/release/bundle/macos
          echo "Fallback build completed, but .app bundle not available"
          }

      - name: Upload macOS
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: target/release/bundle/
