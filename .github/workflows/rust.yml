# Rust workflow to build and package the launcher for Windows, macOS, and Linux.

name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2025]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deps (Windows)
        if: matrix.os == 'windows-2025'
        run: choco install upx

      - name: Deps (Linux)
        if: matrix.os == 'ubuntu-24.04'
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libgtk-3-dev libglib2.0-dev libsoup-3.0-dev libssl-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config build-essential curl xdotool upx-ucl
          version: 1

      - name: Deps (macOS)
        if: matrix.os == 'macos-14'
        run: brew install create-dmg upx

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-allcache-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-allcache-

      - name: Build
        run: cargo build --release --locked --features "desktop"

      - name: Compress
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            upx --best --lzma "target/release/DreamLauncher.exe"
          elif [[ "${{ runner.os }}" == "Linux" ]]; then
            upx --best --lzma "target/release/DreamLauncher"
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            chmod +x scripts/macos/compress.sh
            ./scripts/macos/compress.sh "target/release/DreamLauncher"
          fi

      - name: Package
        shell: bash
        run: |
          set -e
          mkdir -p dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp "target/release/DreamLauncher.exe" "dist/Dream Launcher.exe"
            powershell -Command "Compress-Archive -Path 'dist/Dream Launcher.exe' -DestinationPath 'DreamLauncher-Windows.zip'"
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            chmod +x scripts/macos/bundle.sh
            ./scripts/macos/bundle.sh

            chmod +x scripts/macos/clean.sh
            ./scripts/macos/clean.sh "target/release/Dream Launcher.app"

            chmod +x scripts/macos/sign.sh
            ./scripts/macos/sign.sh "target/release/Dream Launcher.app"

            chmod +x scripts/macos/dmg.sh
            ./scripts/macos/dmg.sh

            if [[ -f "Dream Launcher.dmg" ]]; then
              mv "Dream Launcher.dmg" "dist/Dream Launcher.dmg"
              zip -j "DreamLauncher-macOS.zip" "dist/Dream Launcher.dmg"
              echo "DMG created and zipped successfully"
            else
              echo "No DMG file found"
              exit 1
            fi

            echo "macOS packaging completed"
          else
            cp "target/release/DreamLauncher" "dist/Dream Launcher"
            zip -j "DreamLauncher-Linux.zip" "dist/Dream Launcher"
          fi

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: DreamLauncher-${{ runner.os }}
          path: |
            DreamLauncher-Windows.zip
            DreamLauncher-Linux.zip
            DreamLauncher-macOS.zip
