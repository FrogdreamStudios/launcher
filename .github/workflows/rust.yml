# Dioxus-based workflow to build and package the launcher for Windows, macOS, and Linux.

name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-windows:
    name: Windows x64
    runs-on: windows-2025
    env:
      RUSTFLAGS: "-C link-args=/DEFAULTLIB:advapi32.lib"
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Windows SDK
        uses: microsoft/setup-msbuild@v1.3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        run: |
          rustup update stable
          rustup component add rust-src
          $env:RUSTFLAGS="-C link-args=/DEFAULTLIB:advapi32.lib /DEFAULTLIB:shell32.lib /DEFAULTLIB:user32.lib"
          cargo install dioxus-cli --version 0.5.7 --locked
        shell: powershell

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-x64-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-x64-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: target/release/bundle/

  build-windows-arm64:
    name: Windows ARM64
    runs-on: windows-2025
    env:
      RUSTFLAGS: "-C link-args=/DEFAULTLIB:advapi32.lib"
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Windows SDK
        uses: microsoft/setup-msbuild@v1.3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install Rust
        run: |
          rustup update stable
          rustup target add aarch64-pc-windows-msvc
          rustup component add rust-src
          $env:RUSTFLAGS="-C link-args=/DEFAULTLIB:advapi32.lib /DEFAULTLIB:shell32.lib /DEFAULTLIB:user32.lib"
          cargo install dioxus-cli --version 0.5.7 --locked
        shell: powershell

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-arm64-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-arm64-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop --target aarch64-pc-windows-msvc

      - name: Upload Windows ARM64 installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-arm64-installer
          path: target/aarch64-pc-windows-msvc/release/bundle/

  build-linux:
    name: Linux
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libgtk-3-dev libglib2.0-dev libsoup-3.0-dev libssl-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config build-essential curl xdotool
          version: 1

      - name: Install Rust
        run: |
          rustup update stable
          cargo install dioxus-cli --version 0.5.7 --locked || cargo install dioxus-cli --version 0.5.6 --locked || cargo install dioxus-cli --version 0.5.5 --locked

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: linux-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop

      - name: Upload Linux
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: target/release/bundle/

  build-macos:
    name: macOS
    runs-on: macos-15
    env:
      TAURI_SKIP_XATTR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        run: |
          rustup update stable
          cargo install dioxus-cli --version 0.5.7 --locked || cargo install dioxus-cli --version 0.5.6 --locked || cargo install dioxus-cli --version 0.5.5 --locked

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: macos-dioxus-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: macos-dioxus-

      - name: Build
        run: dx bundle --release --platform desktop || {
          echo "Bundle failed due to xattr issues, trying cargo build as fallback"
          cargo build --release
          mkdir -p target/release/bundle/macos
          echo "Fallback build completed, but .app bundle not available"
          }

      - name: Upload macOS
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: target/release/bundle/
