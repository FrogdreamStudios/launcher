# .github/workflows/ci.yml

name: Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-windows:
    name: Windows x64
    runs-on: windows-2025
    env:
      CARGO_NET_RETRY: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup icon path for Windows
        run: |
          mkdir -p icons
          cp assets/icons/app_icon.ico icons/icon.ico
        shell: bash

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-x64-dioxus-cli-0.7.0-rc.0-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-x64-dioxus-cli-

      - name: Install cargo-binstall
        shell: pwsh
        run: |
          iwr https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-pc-windows-msvc.zip -OutFile binstall.zip
          Expand-Archive binstall.zip -DestinationPath $env:USERPROFILE\.cargo\bin -Force
          echo "$env:USERPROFILE\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Install dioxus-cli (prebuilt)
        shell: pwsh
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build
        run: |
          dx bundle --release --platform desktop || {
            echo "Bundle failed, building simple executable..."
            cargo build --release
            mkdir -p target/dx/DreamLauncher/bundle/windows
            cp target/release/DreamLauncher.exe target/dx/DreamLauncher/bundle/windows/DreamLauncher.exe
          }
        shell: bash

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: target/dx/DreamLauncher/bundle/

  build-windows-arm64:
    name: Windows ARM64
    runs-on: windows-2025
    env:
      CARGO_NET_RETRY: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup icon path for Windows
        run: |
          mkdir -p icons
          cp assets/icons/app_icon.ico icons/icon.ico
        shell: bash

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install Python libs path
        shell: pwsh
        run: |
          $pythonRoot = (python -c "import sys; print(sys.base_prefix)")
          $libPath = Join-Path $pythonRoot "libs"
          echo "Python libs path: $libPath"
          echo "LIB=$libPath;$env:LIB" | Out-File -FilePath $env:GITHUB_ENV -Append
          if (!(Test-Path (Join-Path $libPath "python3.lib"))) {
            Write-Host "python3.lib not found in $libPath"
            exit 1
          }

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: windows-arm64-dioxus-cli-0.7.0-rc.0-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: windows-arm64-dioxus-cli-

      - name: Install cargo-binstall
        shell: pwsh
        run: |
          iwr https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-pc-windows-msvc.zip -OutFile binstall.zip
          Expand-Archive binstall.zip -DestinationPath $env:USERPROFILE\.cargo\bin -Force
          echo "$env:USERPROFILE\.cargo\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Install Rust
        run: |
          rustup update stable
          rustup target add aarch64-pc-windows-msvc
          rustup component add rust-src

      - name: Install dioxus-cli (prebuilt)
        shell: pwsh
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build
        run: |
          dx bundle --release --platform desktop --target aarch64-pc-windows-msvc || {
            echo "Bundle failed, building simple executable for ARM64..."
            cargo build --release --target aarch64-pc-windows-msvc
            mkdir -p target/dx/DreamLauncher/bundle/windows
            cp target/aarch64-pc-windows-msvc/release/DreamLauncher.exe target/dx/DreamLauncher/bundle/windows/DreamLauncher.exe
          }
        shell: bash

      - name: Upload Windows ARM64 installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-arm64-installer
          path: target/dx/DreamLauncher/bundle/

  build-linux:
    name: Linux
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libgtk-3-dev libglib2.0-dev libsoup-3.0-dev libssl-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config build-essential curl xdotool fuse libfuse2 desktop-file-utils appstream
          version: 1

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-dioxus-cli-0.7.0-rc.0-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: linux-dioxus-cli-

      - name: Install cargo-binstall
        run: |
          curl -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binary.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Rust
        run: rustup update stable

      - name: Install dioxus-cli (prebuilt)
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build
        run: |
          export APPIMAGE_EXTRACT_AND_RUN=1
          export APPDIR=/tmp/appdir
          dx bundle --release --platform desktop || {
            echo "AppImage build failed, building simple binary..."
            cargo build --release
            mkdir -p target/dx/DreamLauncher/bundle/linux
            cp target/release/DreamLauncher target/dx/DreamLauncher/bundle/linux/dream-launcher || true
          }

      - name: Upload Linux
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: target/dx/DreamLauncher/bundle/

  build-macos:
    name: macOS
    runs-on: macos-15
    env:
      TAURI_SKIP_XATTR: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements.txt

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: macos-dioxus-cli-0.7.0-rc.0-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: macos-dioxus-cli-

      - name: Install cargo-binstall
        run: |
          curl -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binary.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Rust
        run: rustup update stable

      - name: Install dioxus-cli (prebuilt)
        run: cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build
        run: |
          dx bundle --release --platform desktop || {
            echo "Bundle failed due to xattr issues, trying cargo build as fallback"
            cargo build --release
            mkdir -p target/dx/DreamLauncher/bundle/macos
            cp target/release/DreamLauncher target/dx/DreamLauncher/bundle/macos/DreamLauncher
          }

      - name: Upload macOS
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: target/dx/DreamLauncher/bundle/
